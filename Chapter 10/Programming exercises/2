//copy the content of an array into three other arrays
#include <stdio.h>
double copy_arr(double target1[], double source[], int n);
double copy_ptr(double target2[], double source[], int n);
double copy_ptrs(double target3[], double source[], double *ptrs);

int main(void)
{
int i;
double source[5] = {1.1, 2.2, 3.3, 4.4, 5.5};
double target1[5];
double target2[5];
double target3[5];
copy_arr(target1, source, 5);
copy_ptr(target2, source, 5);
copy_ptrs(target3, source, source + 5);
printf(" \n");

return 0;
}

//use a function with array notations
double copy_arr(double target1[], double source[], int n)
{
int i;
for(i = 0; i < n; i++)
    target1[i] = source[i];
    printf("target1 = { ");
for(i = 0; i < n; i++)
    printf("%f, ", target1[i]);
    printf(" }");
   printf("\n");
return 0;
}

//use a function with pointer and pointer incrementing
double copy_ptr(double target2[], double source[], int n)
{
    int i;
    double *ptr;
    ptr = source;
    for(i = 0; i < n ; i++)
    {
        target2[i] = *ptr;
        ptr++;
    }

    for(i = 0; i < n; i++)
    printf("%f, ", target2[i]);

printf("\n");
    return 0;
}

//the third arguments of the function is a pointer
// which point to element following last element
double copy_ptrs(double target3[], double source[], double *ptrs)
{
    int i, n;
    n = (ptrs - source);
    for(i = n-1; i >= 0; i--)
    {   ptrs--;
        target3[i] = *ptrs;
    }

    for(i = 0; i < n; i++)
    printf("%f, ", target3[i]);

    printf("\n");
    return 0;
}

